{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "HelloDashworldLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/sls-golang-lambda-provided-al2-dev-hello-world"
      }
    },
    "HelloDashworld2LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/sls-golang-lambda-provided-al2-dev-hello-world2"
      }
    },
    "ShowDashenvLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/sls-golang-lambda-provided-al2-dev-show-env"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "sls-golang-lambda-provided-al2",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-golang-lambda-provided-al2-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-golang-lambda-provided-al2-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "sls-golang-lambda-provided-al2",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "HelloDashworldLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/sls-golang-lambda-provided-al2/dev/1695631436265-2023-09-25T08:43:56.265Z/hello-world.zip"
        },
        "Handler": ".bin/hello-world",
        "Runtime": "provided.al2",
        "FunctionName": "sls-golang-lambda-provided-al2-dev-hello-world",
        "MemorySize": 1024,
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "APP_ENV": "dev",
            "NESTED_NAME": "nested"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "HelloDashworldLogGroup"
      ]
    },
    "HelloDashworld2LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/sls-golang-lambda-provided-al2/dev/1695631436265-2023-09-25T08:43:56.265Z/hello-world2.zip"
        },
        "Handler": ".bin/hello-world2",
        "Runtime": "provided.al2",
        "FunctionName": "sls-golang-lambda-provided-al2-dev-hello-world2",
        "MemorySize": 1024,
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "APP_ENV": "dev2",
            "NESTED_NAME": "nested"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "HelloDashworld2LogGroup"
      ]
    },
    "ShowDashenvLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/sls-golang-lambda-provided-al2/dev/1695631436265-2023-09-25T08:43:56.265Z/show-env.zip"
        },
        "Handler": ".bin/show-env",
        "Runtime": "provided.al2",
        "FunctionName": "sls-golang-lambda-provided-al2-dev-show-env",
        "MemorySize": 1024,
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "APP_ENV": "dev",
            "NESTED_NAME": "nested",
            "environment": "dev",
            "service_admin_base_url": "https://example.com/admin",
            "service_from_email": "no-reply@example.com",
            "service_to_email": "service@example.com",
            "jwt_issuer": "https://cognito-idp.ap-northeast-1.amazonaws.com/ap-northeast-1_XXXXXXXXX",
            "sentry_dsn": "https://ingest.sentry.io/XXXXXXXXX",
            "slack_webhook_url": "https://hooks.slack.com/services/XXXXXXXXX/XXXXXXXXXXX/XXXXXXXXXXXXXXXXXX",
            "elastic_search_endpoint": "https://ap-northeast-1.es.amazonaws.com/search-service",
            "elastic_search_aws_access_key_id": "XXXXXXXXXXXXXXXXXXXX",
            "elastic_search_aws_secret_access_key": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
            "elastic_search_project_endpoint": "https://ap-northeast-1.es.amazonaws.com/search-service2",
            "elastic_search_project_aws_access_key_id": "XXXXXXXXXXXXXXXXXXXX2",
            "elastic_search_project_aws_secret_access_key": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX2",
            "cognito_admin_client_id": "1.2345678901234568e+24",
            "cognito_user_client_id": "2.345678901234568e+24",
            "external_front_end_url": "https://example.com/external",
            "v2_front_end_url": "https://example.com/v2"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ShowDashenvLogGroup"
      ]
    },
    "HelloDashworld2LambdaVersionOqaazUhYgk6W13KhMRjNEM18ZyHxVEdV7aryjUieNI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HelloDashworld2LambdaFunction"
        },
        "CodeSha256": "ryU+gWq+RZULGcQhhyMnBizEzglLphLBQZpG5t+Rvfo="
      }
    },
    "HelloDashworld2LambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "HelloDashworld2LambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "HelloDashworld2LambdaPermissionFnUrl": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloDashworld2LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunctionUrl",
        "Principal": "*",
        "FunctionUrlAuthType": "NONE"
      }
    },
    "HelloDashworldLambdaVersion224sNynPQsrD9CUXNdzOkKAhouZwBFGPEIUKua98vhs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HelloDashworldLambdaFunction"
        },
        "CodeSha256": "c5o3HmIaUdFEWKWX5BjlJLIrkKf0LuY/kixN7XFzqmo="
      }
    },
    "HelloDashworldLambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "HelloDashworldLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "HelloDashworldLambdaPermissionFnUrl": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloDashworldLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunctionUrl",
        "Principal": "*",
        "FunctionUrlAuthType": "NONE"
      }
    },
    "ShowDashenvLambdaVersionJR8O4wpBoNz80uJ7C4HptUV9tztL1eiDyJUx59ykc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ShowDashenvLambdaFunction"
        },
        "CodeSha256": "XjCccsXHW+OXLx536cg6xlAlMoyIHAT0G4yA648DbNI="
      }
    },
    "ShowDashenvLambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "ShowDashenvLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "ShowDashenvLambdaPermissionFnUrl": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ShowDashenvLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunctionUrl",
        "Principal": "*",
        "FunctionUrlAuthType": "NONE"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-sls-golang-lambda-provided-al2-dev-ServerlessDeploymentBucketName"
      }
    },
    "HelloDashworld2LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HelloDashworld2LambdaVersionOqaazUhYgk6W13KhMRjNEM18ZyHxVEdV7aryjUieNI"
      },
      "Export": {
        "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworld2LambdaFunctionQualifiedArn"
      }
    },
    "HelloDashworld2LambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "HelloDashworld2LambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworld2LambdaFunctionUrl"
      }
    },
    "HelloDashworldLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HelloDashworldLambdaVersion224sNynPQsrD9CUXNdzOkKAhouZwBFGPEIUKua98vhs"
      },
      "Export": {
        "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworldLambdaFunctionQualifiedArn"
      }
    },
    "HelloDashworldLambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "HelloDashworldLambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworldLambdaFunctionUrl"
      }
    },
    "ShowDashenvLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ShowDashenvLambdaVersionJR8O4wpBoNz80uJ7C4HptUV9tztL1eiDyJUx59ykc"
      },
      "Export": {
        "Name": "sls-sls-golang-lambda-provided-al2-dev-ShowDashenvLambdaFunctionQualifiedArn"
      }
    },
    "ShowDashenvLambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "ShowDashenvLambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-sls-golang-lambda-provided-al2-dev-ShowDashenvLambdaFunctionUrl"
      }
    }
  }
}