{
  "service": {
    "service": "sls-golang-lambda-provided-al2",
    "serviceObject": {
      "name": "sls-golang-lambda-provided-al2"
    },
    "provider": {
      "name": "aws",
      "region": "ap-northeast-1",
      "timeout": 120,
      "runtime": "provided.al2",
      "stage": "dev",
      "environment": {
        "APP_ENV": "dev",
        "NESTED_NAME": "nested"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HelloDashworldLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-golang-lambda-provided-al2-dev-hello-world"
            }
          },
          "HelloDashworld2LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-golang-lambda-provided-al2-dev-hello-world2"
            }
          },
          "ShowDashenvLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-golang-lambda-provided-al2-dev-show-env"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "sls-golang-lambda-provided-al2",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-golang-lambda-provided-al2-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-golang-lambda-provided-al2-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "sls-golang-lambda-provided-al2",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloDashworldLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-golang-lambda-provided-al2/dev/1695628326195-2023-09-25T07:52:06.195Z/hello-world.zip"
              },
              "Handler": ".bin/hello-world",
              "Runtime": "provided.al2",
              "FunctionName": "sls-golang-lambda-provided-al2-dev-hello-world",
              "MemorySize": 1024,
              "Timeout": 120,
              "Environment": {
                "Variables": {
                  "APP_ENV": "dev",
                  "NESTED_NAME": "nested"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloDashworldLogGroup"
            ]
          },
          "HelloDashworld2LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-golang-lambda-provided-al2/dev/1695628326195-2023-09-25T07:52:06.195Z/hello-world2.zip"
              },
              "Handler": ".bin/hello-world2",
              "Runtime": "provided.al2",
              "FunctionName": "sls-golang-lambda-provided-al2-dev-hello-world2",
              "MemorySize": 1024,
              "Timeout": 120,
              "Environment": {
                "Variables": {
                  "APP_ENV": "dev2",
                  "NESTED_NAME": "nested"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloDashworld2LogGroup"
            ]
          },
          "ShowDashenvLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-golang-lambda-provided-al2/dev/1695628326195-2023-09-25T07:52:06.195Z/show-env.zip"
              },
              "Handler": ".bin/show-env",
              "Runtime": "provided.al2",
              "FunctionName": "sls-golang-lambda-provided-al2-dev-show-env",
              "MemorySize": 1024,
              "Timeout": 120,
              "Environment": {
                "Variables": {
                  "APP_ENV": "dev",
                  "NESTED_NAME": "nested"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ShowDashenvLogGroup"
            ]
          },
          "HelloDashworldLambdaVersionZTNFKDTn7Rgh3JHIPFrTjxPZMj16X0d7xcc11Ptq6Io": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloDashworldLambdaFunction"
              },
              "CodeSha256": "HG3ERkr6Z2RsZ3d+Om1X3wihw8lU3CFdJSx0QGB5Dk8="
            }
          },
          "HelloDashworldLambdaFunctionUrl": {
            "Type": "AWS::Lambda::Url",
            "Properties": {
              "AuthType": "NONE",
              "TargetFunctionArn": {
                "Fn::GetAtt": [
                  "HelloDashworldLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "HelloDashworldLambdaPermissionFnUrl": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HelloDashworldLambdaFunctionUrl\"][\"Properties\"][\"TargetFunctionArn\"]"
              },
              "Action": "lambda:InvokeFunctionUrl",
              "Principal": "*",
              "FunctionUrlAuthType": "NONE"
            }
          },
          "HelloDashworld2LambdaVersionnpsrO9bEm4DHui5nupbqqcNaDgLYsK0sh3bozrSZ4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloDashworld2LambdaFunction"
              },
              "CodeSha256": "OLMZB6BcAplTkIAh/JRunc+EKGU7AUa/AtBLKXfOnfY="
            }
          },
          "HelloDashworld2LambdaFunctionUrl": {
            "Type": "AWS::Lambda::Url",
            "Properties": {
              "AuthType": "NONE",
              "TargetFunctionArn": {
                "Fn::GetAtt": [
                  "HelloDashworld2LambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "HelloDashworld2LambdaPermissionFnUrl": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HelloDashworld2LambdaFunctionUrl\"][\"Properties\"][\"TargetFunctionArn\"]"
              },
              "Action": "lambda:InvokeFunctionUrl",
              "Principal": "*",
              "FunctionUrlAuthType": "NONE"
            }
          },
          "ShowDashenvLambdaVersion5Z1xqev1dCRVGSEx1M1EWEAJ4BTs1vffAH5NPWRiZ0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ShowDashenvLambdaFunction"
              },
              "CodeSha256": "AZScfJa6lI8xzkQwMieItCPBEwG8XCtdYKzdohQ10kw="
            }
          },
          "ShowDashenvLambdaFunctionUrl": {
            "Type": "AWS::Lambda::Url",
            "Properties": {
              "AuthType": "NONE",
              "TargetFunctionArn": {
                "Fn::GetAtt": [
                  "ShowDashenvLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "ShowDashenvLambdaPermissionFnUrl": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ShowDashenvLambdaFunctionUrl\"][\"Properties\"][\"TargetFunctionArn\"]"
              },
              "Action": "lambda:InvokeFunctionUrl",
              "Principal": "*",
              "FunctionUrlAuthType": "NONE"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-sls-golang-lambda-provided-al2-dev-ServerlessDeploymentBucketName"
            }
          },
          "HelloDashworldLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloDashworldLambdaVersionZTNFKDTn7Rgh3JHIPFrTjxPZMj16X0d7xcc11Ptq6Io"
            },
            "Export": {
              "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworldLambdaFunctionQualifiedArn"
            }
          },
          "HelloDashworldLambdaFunctionUrl": {
            "Description": "Lambda Function URL",
            "Value": {
              "Fn::GetAtt": [
                "HelloDashworldLambdaFunctionUrl",
                "FunctionUrl"
              ]
            },
            "Export": {
              "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworldLambdaFunctionUrl"
            }
          },
          "HelloDashworld2LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloDashworld2LambdaVersionnpsrO9bEm4DHui5nupbqqcNaDgLYsK0sh3bozrSZ4"
            },
            "Export": {
              "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworld2LambdaFunctionQualifiedArn"
            }
          },
          "HelloDashworld2LambdaFunctionUrl": {
            "Description": "Lambda Function URL",
            "Value": {
              "Fn::GetAtt": [
                "HelloDashworld2LambdaFunctionUrl",
                "FunctionUrl"
              ]
            },
            "Export": {
              "Name": "sls-sls-golang-lambda-provided-al2-dev-HelloDashworld2LambdaFunctionUrl"
            }
          },
          "ShowDashenvLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ShowDashenvLambdaVersion5Z1xqev1dCRVGSEx1M1EWEAJ4BTs1vffAH5NPWRiZ0"
            },
            "Export": {
              "Name": "sls-sls-golang-lambda-provided-al2-dev-ShowDashenvLambdaFunctionQualifiedArn"
            }
          },
          "ShowDashenvLambdaFunctionUrl": {
            "Description": "Lambda Function URL",
            "Value": {
              "Fn::GetAtt": [
                "ShowDashenvLambdaFunctionUrl",
                "FunctionUrl"
              ]
            },
            "Export": {
              "Name": "sls-sls-golang-lambda-provided-al2-dev-ShowDashenvLambdaFunctionUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "go": {
        "cmd": "GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\"",
        "supportedRuntimes": [
          "provided.al2"
        ],
        "buildProvidedRuntimeAsBootstrap": true
      }
    },
    "plugins": [
      "serverless-go-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "hello-world": {
        "handler": ".bin/hello-world",
        "url": true,
        "events": [],
        "name": "sls-golang-lambda-provided-al2-dev-hello-world",
        "package": {
          "individually": true,
          "artifact": ".bin/hello-world.zip"
        },
        "memory": 1024,
        "timeout": 120,
        "runtime": "provided.al2",
        "vpc": {},
        "versionLogicalId": "HelloDashworldLambdaVersionZTNFKDTn7Rgh3JHIPFrTjxPZMj16X0d7xcc11Ptq6Io"
      },
      "hello-world2": {
        "handler": ".bin/hello-world2",
        "url": true,
        "environment": {
          "APP_ENV": "dev2"
        },
        "events": [],
        "name": "sls-golang-lambda-provided-al2-dev-hello-world2",
        "package": {
          "individually": true,
          "artifact": ".bin/hello-world2.zip"
        },
        "memory": 1024,
        "timeout": 120,
        "runtime": "provided.al2",
        "vpc": {},
        "versionLogicalId": "HelloDashworld2LambdaVersionnpsrO9bEm4DHui5nupbqqcNaDgLYsK0sh3bozrSZ4"
      },
      "show-env": {
        "handler": ".bin/show-env",
        "url": true,
        "events": [],
        "name": "sls-golang-lambda-provided-al2-dev-show-env",
        "package": {
          "individually": true,
          "artifact": ".bin/show-env.zip"
        },
        "memory": 1024,
        "timeout": 120,
        "runtime": "provided.al2",
        "vpc": {},
        "versionLogicalId": "ShowDashenvLambdaVersion5Z1xqev1dCRVGSEx1M1EWEAJ4BTs1vffAH5NPWRiZ0"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "sls-golang-lambda-provided-al2",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/sls-golang-lambda-provided-al2/dev/1695628326195-2023-09-25T07:52:06.195Z",
    "artifact": ""
  }
}